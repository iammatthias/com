---
import { getCollection } from "astro:content";

// layouts
import PageLayout from "@layouts/PageLayout.astro";

const { path }: { path: any } = Astro.params;

export async function getStaticPaths() {
  const paths = ["posts", "recipes", "notes", "art"];
  return paths.map((path) => ({ params: { path } }));
}

const allContent = await getCollection(path);

// sort posts by created date, newest first
const sortedContent = allContent.sort(
  (a: any, b: any) => new Date(b.data.frontmatter.created).getTime() - new Date(a.data.frontmatter.created).getTime()
);

// drop the body
const entries = sortedContent.map((entry: any) => ({
  ...entry.data.frontmatter,
}));
---

<PageLayout title='Home' path='home'>
  <aside></aside>
  <section>
    <div class='header'>
      <h1 class='capitalize'>{path}</h1>
    </div>
    <ul>
      {
        entries.map((entry) => (
          <li>
            <h2>
              <a href={`/${path}/${entry.slug}`}>{entry.title}</a>
            </h2>
            {/* Always show the created date. Only show the updated date if it is +24 hours from the created date */}
            <p>
              Published {new Date(entry.created).toLocaleDateString()}.
              {new Date(entry.updated).getTime() - new Date(entry.created).getTime() > 24 * 60 * 60 * 1000 &&
                `Last updated ${new Date(entry.updated).toLocaleDateString()}.`}
            </p>
            <div class='tags'>
              {entry.tags.map((tag: any) => (
                <span>#{tag}</span>
              ))}
            </div>
          </li>
        ))
      }
    </ul>
  </section>
</PageLayout>

<style>
  ul {
    margin: 0;
    list-style: none;
    padding: var(--padding);
    height: fit-content;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .header {
    padding: var(--padding);
  }
</style>
