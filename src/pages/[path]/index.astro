---
// layouts
import PageLayout from "@/layouts/PageLayout.astro";

// components
import RecentContent from "@/components/RecentContent.astro";

// content
import { getCollection } from "astro:content";

const { path } = Astro.params;

export async function getStaticPaths() {
  const content = await getCollection("content");
  const uniquePaths = [...new Set(content.map((entry) => entry.data.path))];

  return uniquePaths.map((path) => ({
    params: { path },
  }));
}
---

<PageLayout path={path}>
  <div class='grid'>
    <div class='meta'>
      <h1 class='capitalize'>{path}</h1>
    </div>
    <article>
      <RecentContent collection={path} showTags={true} showExcerpts={true} />
    </article>
  </div>
</PageLayout>

<style>
  .grid {
    display: grid;
    grid-template-columns: calc(var(--meta-column) - var(--aside-width)) 1fr;
    position: relative;
    min-height: calc(100vh - var(--nav-height) - var(--footer-height) - 4px);
  }

  .meta {
    display: flex;
    flex-direction: column;
    gap: 16px;
    align-self: start;
    height: 100%;
    max-height: calc(100vh - var(--nav-height) - var(--footer-height));
    overflow-y: auto;
    padding: 1rem;
    p,
    .tags {
      font-size: var(--fs-sm);
    }
  }

  article {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 1rem;
  }

  article > :global(*) {
    max-width: 600px;
    width: 100%;
  }

  @media (max-width: 768px) {
    .grid {
      grid-template-columns: 1fr;
    }
  }
</style>
