---
import Layout from "@layouts/layout.astro";

const { tag } = Astro.params;

interface SlugPathPair {
  slug: string;
  path: string;
  title: string;
}

interface Tags {
  [key: string]: SlugPathPair[];
}

const isStaging = import.meta.env.MODE === "development";

let tags: Tags = await fetch(
  isStaging
    ? "https://pub-ba3d6ef16e5c44b7b4b89835777f6653.r2.dev/tags-staging.json"
    : "https://pub-ba3d6ef16e5c44b7b4b89835777f6653.r2.dev/tags.json"
).then((res) => res.json());

// using the tag parameter to filter the tags
if (tag) {
  tags = Object.fromEntries(Object.entries(tags).filter(([key]) => key === tag));
}
---

<Layout>
  <main>
    <p class='breadcrumb'>
      <small>
        <a href='/'>⌂</a> / <a href='/tags'>tags</a>
      </small>
    </p>

    <h1>Tag: {tag}</h1>

    {
      Object.entries(tags).map(([tags, slugs]) =>
        slugs.map(({ slug, path, title }) => (
          <p>
            <a href={`/${path}/${slug}`}>{title}</a>
          </p>
        ))
      )
    }

    <p class='breadcrumb'>
      <small>
        <a href='/'>⌂</a> / <a href='/tags'>tags</a>
      </small>
    </p>
  </main>
</Layout>

<style>
  ul,
  li {
    list-style: none;
    padding: 0;
  }

  .grid {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .subgrid {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  @media (max-width: 768px) {
    .grid {
      gap: 1.5rem;
    }
  }

  @media (max-width: 480px) {
    .grid {
      gap: 1rem;
    }
  }

  .breadcrumb a {
    border-bottom: none;
  }
</style>
