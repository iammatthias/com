---
import { Head } from "astro-capo";
// @ts-ignore
import { SEO } from "astro-seo";
import PostHog from "@components/posthog.astro";
// styles
import "@/styles/reset.css";
import "@/styles/global.css";
import "@/styles/typography.css";

// components
import Footer from "@components/Footer.astro";
import Nav from "@components/Nav.astro";
const { title, path } = Astro.props;

let seoTitle = "@iammatthias";
if (title || path) {
  seoTitle = "";
  if (title) {
    seoTitle += `${title} | `;
  }
  if (path) {
    seoTitle += `${path.charAt(0).toUpperCase() + path.slice(1)} | `;
  }
  seoTitle += "@iammatthias";
}

const base_url = Astro.url.origin;

let seoImage = `${base_url}/api/og.png`;

if (title || path) {
  if (path) {
    seoImage = `${base_url}/api/og-${path}.png`;
  }
  if (title && path) {
    seoImage = `${base_url}/api/og-${path}-${encodeURIComponent(title)}.png`;
  }
}
---

<html lang='en'>
  <Head>
    <SEO
      charset='UTF-8'
      title={seoTitle}
      description='A digital garden where photographs, recipes, and thoughts can grow.'
      openGraph={{
        basic: {
          title: seoTitle,
          type: "website",
          image: seoImage,
        },
        optional: {
          description: "A digital garden where photographs, recipes, and thoughts can grow.",
        },
      }}
      twitter={{
        creator: "@iammatthias",
        card: "summary_large_image",
        image: seoImage,
        title: seoTitle,
        description: "A digital garden where photographs, recipes, and thoughts can grow.",
      }}
      extend={{
        link: [
          {
            rel: "icon",
            href: "data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20100%20100%22%3E%3Ctext%20y%3D%22.9em%22%20font-size%3D%2290%22%3E%F0%9F%8C%9E%3C%2Ftext%3E%3C%2Fsvg%3E",
          },
          {
            rel: "sitemap",
            type: "application/xml",
            href: "/sitemap-index.xml",
          },
        ],
        meta: [
          {
            name: "viewport",
            content: "width=device-width, initial-scale=1",
          },
          {
            name: "generator",
            content: "Astro",
          },
        ],
      }}
    />
    <PostHog />
  </Head>
  <body>
    <Nav />

    <main>
      <slot />
    </main>

    <!-- <Footer /> -->
  </body>
</html>

<style>
  :root {
    --article-max-width: 100%;
  }

  body {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    min-height: 100vh;
    position: relative;
  }

  main {
    position: relative;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    width: 100%;
    min-height: calc(100vh - var(--nav-height) - 2rem - 2px);
    position: relative;
    flex: 1;
  }

  /* Apply constraints to most content */
  ::global(nav),
  ::global(main > *) {
    width: 100%;
    max-width: 600px;
    margin: 0 auto;
  }
</style>

<script is:inline type='module' src='https://cdn.jsdelivr.net/npm/lite-vimeo-embed/+esm'></script>

<script>
  // Flag to ensure this only runs once
  let navHeightSet = false;

  function setNavHeight() {
    if (navHeightSet) return;

    const nav = document.querySelector("nav");
    if (nav) {
      const navHeight = nav.offsetHeight;
      document.documentElement.style.setProperty("--nav-height", `${navHeight}px`);
      navHeightSet = true;
    }
  }

  // Run on initial page load
  document.addEventListener("astro:page-load", setNavHeight);

  // Also run immediately in case astro:page-load has already fired
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", setNavHeight);
  } else {
    setNavHeight();
  }
</script>
