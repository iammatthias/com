---
import { getCollection } from "astro:content";

// Get unique content paths for navigation
const content = await getCollection("content");
const contentPaths = [...new Set(content.map((entry) => entry.data.path))];
---

<nav>
  <div class='nav-content'>
    <div class='nav-item'>
      <a href='/'>@iammatthias</a>
    </div>
    <div class='nav-item menu-button'>MENU</div>
    <div class='nav-item time'>
      <time datetime={new Date().toISOString().slice(0, -5)}></time>
    </div>
  </div>
  <div class='dropdown-menu'>
    <a href='/'>Home</a>
    {contentPaths.map((path) => <a href={`/${path}`}>{path}</a>)}
    <a href='/social'>Social</a>
    <a href='/resume'>Resume</a>
    <a href='/onchain-analytics'>Onchain Analytics</a>
  </div>
</nav>

<script>
  function setupMenu() {
    const menuButton = document.querySelector(".menu-button");
    const dropdownMenu = document.querySelector(".dropdown-menu");

    if (menuButton && dropdownMenu) {
      // Remove any existing listeners to prevent duplicates
      menuButton.removeEventListener("click", toggleMenu);
      // Add the listener
      menuButton.addEventListener("click", toggleMenu);
    }
  }

  function toggleMenu() {
    const dropdownMenu = document.querySelector(".dropdown-menu");
    dropdownMenu?.classList.toggle("show");
  }

  // Update time every minute
  function updateTime() {
    const timeElement = document.querySelector("time");
    if (timeElement) {
      timeElement.setAttribute("datetime", new Date().toISOString().slice(0, -5));
      timeElement.textContent = new Date().toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" });
    }
  }

  // Initial setup
  setupMenu();
  updateTime();
  setInterval(updateTime, 60000);

  // Handle view transitions
  document.addEventListener("astro:after-swap", setupMenu);
  document.addEventListener("astro:page-load", setupMenu);
</script>

<style>
  nav {
    position: sticky;
    top: 0;
    z-index: 101;
    background-color: var(--background);
    border-bottom: var(--border);
  }

  .nav-content {
    display: grid;
    grid-template-columns: 400px 1fr 400px;
  }

  .nav-item {
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 12px;
    padding: 12px;
    border-right: var(--border);
    height: var(--nav-height);
    box-sizing: border-box;
  }

  .nav-item:first-child {
    @media (max-width: 768px) {
      display: none;
    }
  }

  .nav-item:last-child {
    border-right: none;
  }

  .menu-button {
    cursor: pointer;
  }

  .dropdown-menu {
    display: none;
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    height: calc(100dvh - var(--nav-height));
    background-color: var(--background);
    border-top: var(--border);
  }

  .dropdown-menu.show {
    display: flex;
    flex-direction: column;
  }

  .dropdown-menu a {
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 14px;
    padding: 12px;
    text-decoration: none;
    color: var(--color);
    border-bottom: var(--border);
    transition: background-color 0.3s ease;
    text-transform: uppercase;
  }

  .dropdown-menu a:last-child {
    border-bottom: none;
  }

  .dropdown-menu a:hover {
    background-color: #f0f0f0;
  }

  @media (max-width: 768px) {
    .nav-content {
      grid-template-columns: 1fr;
    }

    .nav-item {
      border-right: none;
    }

    .nav-item.time {
      display: none;
    }
  }
</style>
