---
import Layout from "@layouts/layout.astro";

import { db, eq, Posts, Tags, PostTags } from "astro:db";

type Post = {
  slug: string;
  path: string;
  title: string;
};

type TagPostMap = {
  [tag: string]: Post[];
};

const tagsWithPosts = await db
  .select()
  .from(Tags)
  .innerJoin(PostTags, eq(PostTags.tagId, Tags.id))
  .innerJoin(Posts, eq(PostTags.postId, Posts.id))
  .execute();

// Transform the data into a map where each key is a tag and the value is an array of related posts
const tagPostMap: TagPostMap = tagsWithPosts.reduce((map, { Tags, Posts }) => {
  if (!map[Tags.name]) {
    map[Tags.name] = [];
  }
  map[Tags.name].push(Posts);
  return map;
}, {});
---

<Layout>
  <main>
    <h1>Tags</h1>
    <ul class='masonry' x-data x-masonry>
      {
        Object.entries(tagPostMap).map(([tag, posts]) => (
          <div>
            <h2>
              <a href={`/tags/${tag}`}>{tag}</a>
            </h2>

            {posts.map(({ slug, path, title }) => (
              <p>
                <small>
                  <a href={`/${path}/${slug}`}>{title}</a>
                </small>
              </p>
            ))}
          </div>
        ))
      }
    </ul>
  </main>
</Layout>

<script>
  import Alpine from "alpinejs";
  import masonry from "alpinejs-masonry";

  Alpine.plugin(masonry);
</script>

<style>
  h2 {
    font-size: var(--fs-h5);
  }
  h2 a {
    color: inherit;
  }

  p a {
    color: inherit;
  }
  ul,
  li {
    list-style: none;
    padding: 0;
  }

  li {
    padding-left: 0.5rem;
  }

  .masonry {
    display: grid;
    gap: 2rem;
    align-items: flex-start;
  }

  .masonry > div {
    border: 1px solid var(--foreground);
    border-radius: 0.5rem;
    padding: 0.5rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  /* Large devices (desktops, 992px and up) */
  @media (min-width: 992px) {
    .masonry {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  /* Medium devices (tablets, 768px and up) */
  @media (min-width: 768px) and (max-width: 991px) {
    .masonry {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  /* Small devices (landscape phones, 576px and up) */
  @media (min-width: 576px) and (max-width: 767px) {
    .masonry {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  /* Extra small devices (portrait phones, less than 576px) */
  @media (max-width: 575px) {
    .masonry {
      grid-template-columns: repeat(1, minmax(0, 1fr));
      grid-gap: 1rem;
    }
  }
</style>
