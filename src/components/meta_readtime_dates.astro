---
const { created, updated, readingTime } = Astro.props;

function formatDate(dateString) {
  const date = new Date(dateString);
  return new Intl.DateTimeFormat("en-US", { year: "numeric", month: "long", day: "numeric" }).format(date);
}

// Convert the timestamps to Date objects
const createdAtDate = new Date(created as string);
const updatedAtDate = new Date(updated as string);

// Calculate the difference in milliseconds
const difference = updatedAtDate.getTime() - createdAtDate.getTime();

// Check if the difference is more than 24 hours
const isUpdatedAfter24Hours = difference > 24 * 60 * 60 * 1000;
---

<p>
  This post was first published on <time datetime={created}>{formatDate(created)}</time>{
    isUpdatedAfter24Hours ? (
      <>
        and was last updated <time datetime={updated}>{formatDate(updated)}</time>.
      </>
    ) : (
      "."
    )
  }
  It will take roughly {readingTime}
  {readingTime === 1 ? "minute" : "minutes"} to read.
</p>
