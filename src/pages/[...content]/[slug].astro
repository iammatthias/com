---
export const prerender = true;
import Layout from "@layouts/layout.astro";
import { getObsidianEntries } from "@lib/github";
import { Markdown } from "astro-remote";

export async function getStaticPaths() {
  const contentTypes = ["posts", "recipes", "notes" /* add other content types here */];

  const paths = await contentTypes.reduce<Promise<any[]>>(async (prevPromise, contentType) => {
    const accum = await prevPromise;
    const entries = await getObsidianEntries(contentType);

    const newPaths = entries.map((entry) => ({
      params: { content: contentType, slug: entry.frontmatter.slug },
      props: {
        body: entry.body,
        frontmatter: entry.frontmatter,
        contentType,
      },
    }));

    return [...accum, ...newPaths];
  }, Promise.resolve([]));

  return paths;
}

const { body, frontmatter, contentType } = Astro.props;

// Convert the timestamps to Date objects
const createdAtDate = new Date(frontmatter.created);
const updatedAtDate = new Date(frontmatter.updated);

// Calculate the difference in milliseconds
const difference = updatedAtDate.getTime() - createdAtDate.getTime();

// Check if the difference is more than 24 hours
const isUpdatedAfter24Hours = difference > 24 * 60 * 60 * 1000;
---

<Layout title={`${contentType} | ${frontmatter.title}`}>
  <main>
    <h1>{frontmatter.title}</h1>
    <p>
      <small>
        This post was first published at <time datetime={frontmatter.created}>{frontmatter.created}</time>. {
          isUpdatedAfter24Hours && (
            <time datetime={frontmatter.updated}>It was last updated at {frontmatter.updated}</time>
          )
        }
      </small>
    </p>
    {
      frontmatter.tags && frontmatter.tags.length > 0 && (
        <div class='tags'>
          {frontmatter.tags.map((tag: string) => (
            <span>
              <small>#{tag}</small>
            </span>
          ))}
        </div>
      )
    }
    <article>
      <Markdown>{body}</Markdown>
    </article>
  </main>
</Layout>

<style>
  article {
    max-width: 800px;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .tags {
    display: flex;
    gap: 0.5rem;
  }
</style>
