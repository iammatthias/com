---
export const prerender = false;

import Layout from "@layouts/layout.astro";
import BreadCrumb from "@components/breadcrumb.astro";
import { getObsidianEntries } from "@lib/github.ts";
import Meta_Tags from "@components/meta_tags.astro";
import Squiggle from "@components/squiggle.astro";

const { tag } = Astro.params;
const categories = ["posts", "recipes", "notes", "art"];
let entriesForTag: any[] = [];

// Fetch and filter entries for the given tag
for (const category of categories) {
  const entries = await getObsidianEntries(category);

  entries.forEach((entry) => {
    if (entry.frontmatter.tags && entry.frontmatter.tags.includes(tag) && entry.frontmatter.slug) {
      entriesForTag.push(entry.frontmatter);
    }
  });
}
---

<Layout>
  <main>
    <h1>Tag: {tag}</h1>
    <BreadCrumb path='tags' />

    <ul>
      {
        entriesForTag.map((entry) => (
          <>
            <li>
              <h2>
                <a href={`/${entry.path}/${entry.slug}`}>{entry.title}</a>
              </h2>
              <Meta_Tags tags={entry.tags} />
              <p>
                <small>{entry.created}</small>
              </p>
            </li>
            <Squiggle />
          </>
        ))
      }
    </ul>
    <BreadCrumb path='tags' />
  </main>
</Layout>

<style>
  h1 {
    text-transform: capitalize;
  }

  h2 a {
    color: var(--color-text);
    border: none;
  }

  ul {
    list-style: none;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  @media (max-width: 768px) {
    ul {
      gap: 1.5rem;
    }
  }

  @media (max-width: 480px) {
    ul {
      gap: 1rem;
    }
  }
</style>
