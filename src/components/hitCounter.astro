---

---

<a href='/onchain-analytics'
  ><div class='wrapper'><span class='circle'></span> <span><span id='sessionCount'></span> hits</span></div></a
>

<script>
  import { publicClient } from "@lib/viemClients";
  import { sessionCountABI } from "@lib/abi";

  const updateSessionCount = async () => {
    const contractAddress = await import.meta.env.PUBLIC_HIT_COUNTER_CONTRACT;

    const data = await publicClient.readContract({
      address: contractAddress,
      abi: sessionCountABI,
      functionName: "sessionCount",
    });

    // Set the --num CSS property
    const sessionCountElement = document.getElementById("sessionCount");
    sessionCountElement!.style.setProperty("--num", `${Number(data)}`);
  };

  const handleVisibilityChange = async () => {
    if (document.visibilityState === "visible") {
      await updateSessionCount();
    }
  };

  // Update the session count on page load
  window.addEventListener("load", updateSessionCount);

  // Update the session count when the page becomes visible
  document.addEventListener("visibilitychange", handleVisibilityChange);

  // Watch for new blocks and update the session count
  const unwatch = publicClient.watchBlocks({
    onBlock: updateSessionCount,
    onError: (error) => console.error(error),
  });

  // Stop watching for new blocks when the page is unloaded
  window.addEventListener("unload", unwatch);
</script>

<style>
  .wrapper {
    padding: 8px 12px;
    color: var(--foreground);
    border: 1px solid var(--foreground);
    border-radius: 3rem;
    box-shadow: var(--smooth-shadow);
    backdrop-filter: blur(10px);
    width: fit-content;
    min-width: 96px;
    font-size: 12px;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    gap: 12px;
    position: fixed;
    bottom: 2.5rem;
    right: 2rem;
    font-family: monospace;
  }

  @property --num {
    syntax: "<integer>";
    initial-value: 0;
    inherits: false;
  }

  #sessionCount {
    transition: --num 1s;
    counter-reset: num var(--num);
  }
  #sessionCount::before {
    content: counter(num);
  }

  .circle {
    display: inline-block;
    background-color: transparent;
    width: 8px;
    height: 8px;
    border-radius: 50px;
    box-shadow:
      0 0 8px var(--gold),
      inset 0 0 8px var(--gold-lighter);
    animation: pulse 5s ease 5s infinite;
  }

  @keyframes pulse {
    0% {
      box-shadow:
        0 0 8px var(--gold),
        inset 0 0 8px var(--gold);
    }
    50% {
      box-shadow:
        0 0 16px var(--gold),
        inset 0 0 14px var(--gold);
    }
    100% {
      box-shadow:
        0 0 8px var(--gold),
        inset 0 0 8px var(--gold);
    }
  }
</style>
