---
// layout
import PageLayout from "@/layouts/PageLayout.astro";

// components
import RecentContent from "@/components/RecentContent.astro";
// import RecentGlassContent from "@/components/RecentGlassContent.astro";

// content
import { getCollection } from "astro:content";

// Get unique content paths for sections and sort by recency
const content = await getCollection("content");
const contentPaths = [...new Set(content.map((entry) => entry.data.path))];

// Sort paths by the most recent content's created date
const sortedPaths = contentPaths.sort((pathA, pathB) => {
  const latestA = Math.max(
    ...content.filter((entry) => entry.data.path === pathA).map((entry) => new Date(entry.data.created).getTime())
  );

  const latestB = Math.max(
    ...content.filter((entry) => entry.data.path === pathB).map((entry) => new Date(entry.data.created).getTime())
  );

  return latestB - latestA; // Sort in descending order (newest first)
});
---

<PageLayout>
  <div class='grid'>
    <div class='meta'>
      <h1>Hi, I'm Matthias</h1>
      <p>
        I'm a photographer turned growth technologist. Over the years I've worked in travel, fintech, and ecommerce.
      </p>
      <p>
        These days I run <a
          href='https://day---break.com/'
          target='_blank'
          title='day---break: Driving Growth Through Data-Driven Marketing'>day---break</a
        >, a marketing consultancy focused on growth and lifecycle automation.
      </p>
    </div>
    <div class='recent-content-grid'>
      {
        sortedPaths.map((path) => (
          <div class='recent-content'>
            <RecentContent
              showTags={true}
              showCategory={true}
              showExcerpts={false}
              contentLimit={10}
              collection={path}
            />
          </div>
        ))
      }
    </div>
  </div>
</PageLayout>

<style>
  .grid {
    display: grid;
    grid-template-columns: calc(var(--meta-column) - var(--aside-width)) 1fr;
    position: relative;
    min-height: calc(100vh - var(--nav-height) - var(--footer-height) - 4px);
    @media (max-width: 1023px) {
      grid-template-columns: 1fr;
    }
  }

  .recent-content-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1rem;
    align-content: start;
    padding: 1rem;
    @media (max-width: 1023px) {
      padding: 2rem 1rem;
    }
  }

  .meta {
    display: flex;
    flex-direction: column;
    gap: 16px;
    position: sticky;
    top: calc(var(--nav-height));
    height: fit-content;
    align-self: start;
    height: 100%;
    max-height: calc(100vh - var(--nav-height) - var(--footer-height));
    overflow-y: auto;
    border-right: var(--border);
    padding: 1rem;
    @media (max-width: 1023px) {
      border-right: none;
      border-bottom: var(--border);
      padding: 2rem 1rem;
    }
  }

  @media (max-width: 768px) {
    .meta {
      position: relative;
      top: 0;
      max-height: none;
      overflow-y: visible;
      padding: 16px;
    }

    .recent-content-grid {
      padding: 16px;
    }
  }
</style>
