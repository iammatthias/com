---
let slots = await Astro.slots.render("default");
let slotsString = slots.toString();
let imgCount = (slotsString.match(/img src/g) || []).length;
let maxColumns = Math.min(imgCount, 3);
let smallColumns = Math.min(imgCount, 2);
let extraSmallColumns = Math.min(imgCount, 1);
---

{
  imgCount === 0 ? (
    <p>
      <slot />
    </p>
  ) : imgCount === 1 ? (
    <slot />
  ) : (
    <div
      class='masonry'
      x-data
      x-masonry
      style={`--max-columns: ${maxColumns}; --small-columns: ${smallColumns}; --extra-small-columns: ${extraSmallColumns};`}
    >
      <slot />
    </div>
  )
}

<script>
  import Alpine from "alpinejs";
  import masonry from "alpinejs-masonry";

  Alpine.plugin(masonry);
</script>

<style>
  a {
    text-decoration: none;
    border: none;
  }

  .masonry {
    display: grid;
    grid-gap: 2rem;
    align-items: flex-start;
    grid-template-columns: repeat(var(--max-columns), minmax(0, 1fr));
  }

  /* Large devices (desktops, 992px and up) */
  @media (min-width: 992px) {
    .masonry {
      grid-template-columns: repeat(var(--max-columns), minmax(0, 1fr));
    }
  }

  /* Small devices (landscape phones, 576px and up) */
  @media (min-width: 576px) and (max-width: 767px) {
    .masonry {
      grid-template-columns: repeat(var(--small-columns), minmax(0, 1fr));
    }
  }

  /* Extra small devices (portrait phones, less than 576px) */
  @media (max-width: 575px) {
    .masonry {
      grid-template-columns: 1fr;
      grid-gap: 1rem;
    }
  }
</style>
