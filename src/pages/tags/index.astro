---
export const prerender = false;

import Layout from "@layouts/layout.astro";
import { getObsidianEntries } from "@lib/github.ts";

const paths = ["posts", "recipes", "notes", "art"];
let tags = {};

// Iterate over each category to fetch entries
for (const path of paths) {
  const entries = await getObsidianEntries(path);

  // Iterate over each entry
  entries.forEach((entry) => {
    if (entry.frontmatter.slug && entry.frontmatter.tags) {
      // Iterate over each tag in the entry
      entry.frontmatter.tags.forEach((tag) => {
        // If the tag is not yet in the tags object, add it
        if (!tags[tag]) {
          tags[tag] = [];
        }

        // Create an object with only the required properties
        const entryInfo = {
          slug: entry.frontmatter.slug,
          title: entry.frontmatter.title,
          path: path, // Assuming the path is the same as provided by the outer loop
        };

        // Add the entryInfo to the array of entries for this tag
        tags[tag].push(entryInfo);
      });
    }
  });
}
---

<Layout>
  <h1>Tags</h1>
  <ul class='masonry' x-data x-masonry>
    {
      Object.entries(tags).map(([tag, posts]) => (
        <div>
          <h2>
            <a href={`/tags/${tag}`}>{tag}</a>
          </h2>

          <ul>
            {posts.map(({ slug, path, title }) => (
              <li>
                <p>
                  <small>
                    <a href={`/${path}/${slug}`}>{title}</a>
                  </small>
                </p>
              </li>
            ))}
          </ul>
        </div>
      ))
    }
  </ul>
</Layout>

<script>
  import Alpine from "alpinejs";
  import masonry from "alpinejs-masonry";

  // @ts-ignore
  Alpine.plugin(masonry);
</script>

<style>
  h2 {
    font-size: var(--fs-h5);
  }
  h2 a {
    color: inherit;
  }

  p a {
    color: inherit;
  }
  ul,
  li {
    list-style: none;
    padding: 0;
  }

  ul ul li {
    list-style: circle;
    margin-left: 1rem;
  }

  .masonry {
    display: grid;
    gap: 2rem;
    align-items: flex-start;
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .masonry > div {
    border: 1px solid var(--foreground);
    border-radius: 1.5rem;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  /* Extra small devices (portrait phones, less than 576px) */
  @media (max-width: 575px) {
    .masonry {
      grid-template-columns: repeat(1, minmax(0, 1fr));
      grid-gap: 1rem;
    }
  }
</style>
