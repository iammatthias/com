---
// layout
import PageLayout from "@/layouts/PageLayout.astro";

// content
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const tags = await getCollection("tags");
  return tags.map((tag) => ({
    params: { tag: tag.data.tag },
    props: { currentTag: tag },
  }));
}

const { currentTag } = Astro.props;
const { entries } = currentTag.data;
---

<PageLayout title={currentTag.data.tag} path='Tags'>
  <main>
    <header>
      <h1 class='title'>{currentTag.data.tag}</h1>
      <p class='count'>{entries.length} entries</p>
    </header>

    {
      entries.map((entry) => (
        <div>
          <p>
            <a href={`/${entry.path}`}>{entry.path}</a>
          </p>
          <h2>
            <a href={`/${entry.path}/${entry.slug}`}>{entry.title}</a>
          </h2>

          <p class='align-bottom small'>
            <a href={`/${entry.path}/${entry.slug}`}>
              Published {new Date(entry.created).toLocaleDateString()}
              <br />
              {new Date(entry.updated).getTime() - new Date(entry.created).getTime() > 24 * 60 * 60 * 1000 &&
                `Last updated ${new Date(entry.updated).toLocaleDateString()}`}
            </a>
          </p>
        </div>
      ))
    }
  </main>
</PageLayout>

<style>
  main {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(min(100%, 350px), 1fr));
    min-height: calc(100vh - var(--nav-height) - var(--footer-height) - 4px);
    overflow: hidden;
    align-content: start;
    align-items: start;
    gap: 1px;
  }

  main > :global(*):not(.glass-content) {
    aspect-ratio: 6/7;
    min-height: 0;
    min-width: 0;
    outline: var(--border);
    padding: var(--padding);
    @media (max-width: 768px) {
      /* &:first-child {
            aspect-ratio: unset;
          } */
      aspect-ratio: 7/6;
    }
  }

  main > div {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .align-bottom {
    margin-top: auto;
  }

  .small {
    font-size: 0.8rem;
  }
</style>
