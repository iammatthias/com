---
// layout
import PageLayout from "@/layouts/PageLayout.astro";

// content
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const tags = await getCollection("tags");
  return tags.map((tag) => ({
    params: { tag: tag.data.tag },
    props: { currentTag: tag },
  }));
}

const { currentTag } = Astro.props;
const { entries } = currentTag.data;
---

<PageLayout title={currentTag.data.tag} path='Tags'>
  <div class='grid'>
    <div class='meta'>
      <h1 class='title'>{currentTag.data.tag}</h1>
      <p class='small'>
        {entries.length}
        {entries.length === 1 ? "entry" : "entries"}
      </p>
      <p class='small'>
        <a href='/tags'>â†¢ Tags</a>
      </p>
    </div>
    <div class='tags-grid'>
      {
        entries.map((entry) => (
          <div>
            <h5>{entry.title}</h5>

            <p class='small'>
              Published {new Date(entry.created).toLocaleDateString()}
              {entry.updated &&
                new Date(entry.updated).getTime() - new Date(entry.created).getTime() > 24 * 60 * 60 * 1000 &&
                `Last updated ${new Date(entry.updated).toLocaleDateString()}`}
            </p>
            <div class='tags'>
              {entry.tags.map((tag) => (
                <span class='small'>
                  #<a href={`/tags/${tag}`}>{tag}</a>
                </span>
              ))}
            </div>
          </div>
        ))
      }
    </div>
  </div>
</PageLayout>

<style>
  .grid {
    display: grid;
    grid-template-columns: calc(var(--meta-column) - var(--aside-width)) 1fr;

    position: relative;
    min-height: calc(100vh - var(--nav-height) - var(--footer-height) - 4px);
  }

  .tags-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1rem;
    align-content: start;
    @media (max-width: 768px) {
      gap: 4rem;
    }
  }

  .tags-grid > div {
    padding: 1rem;

    @media (max-width: 768px) {
      padding: 0;
    }
  }

  .meta {
    display: flex;
    flex-direction: column;
    gap: 16px;
    position: sticky;
    top: calc(var(--nav-height));
    height: fit-content;
    align-self: start;
    height: 100%;
    max-height: calc(100vh - var(--nav-height) - var(--footer-height));
    overflow-y: auto;
    border-right: var(--border);
    padding: 1rem;
    @media (max-width: 768px) {
      border-right: none;
    }
  }

  @media (max-width: 768px) {
    .grid {
      grid-template-columns: 1fr;
    }

    .meta {
      position: relative;
      top: 0;
      max-height: none;
      overflow-y: visible;
      padding: 16px;
    }

    .tags-grid {
      padding: 16px;
    }
  }
</style>
